/*
 * CalibrationFrame.java
 *
 * Created on 31 octobre 2008, 19:11
 */

package JRaw.ihm;

import java.awt.Graphics;
import java.awt.Image;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;

/**
 *
 * @author  YvesFabienne
 */
public class CalibrationFrame extends javax.swing.JFrame implements MouseListener {
    Image img;
    MainJFrame frame;
    /** Creates new form CalibrationFrame */
    public CalibrationFrame(MainJFrame frameArg) {
        frame = frameArg;
        img = frameArg.image;
        setUndecorated(true);
        initComponents();
        addMouseListener(this);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void mouseClicked( MouseEvent e) {
        setVisible(false);
        dispose();
        frame.setVisible(true);
    }
    public void mouseEntered( MouseEvent e) {
        
    }
    public void mouseExited( MouseEvent e) {
        
    }
    public void mousePressed( MouseEvent e) {
    }
    public void mouseReleased( MouseEvent e) {
    }
    
    @Override
    public void paint(Graphics g) {
        g.drawImage(img, 0, 0, null);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

}
